services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fono-suite-api
    # Lee variables desde .env (en la raíz, junto a este compose)
    env_file:
      - .env
    # Overrides rápidos (opcional)
    environment:
      # Si prefieres sobrescribir aquí, puedes dejar estas:
      # DATABASE_URL: postgresql+psycopg2://fono:password@db:5432/fonoapp
      # JWT_SECRET: PLEASE_CHANGE_ME
      # JSON válido para CORS:
      CORS_ORIGINS: '["http://localhost:8081","http://localhost:5173"]'
    command: >
      uvicorn backend.main:app
      --host 0.0.0.0
      --port 8000
      --proxy-headers
    ports:
      - "8000:8000"   # ← publica el API en tu máquina
    volumes:
      - storage:/app/backend/storage
      # Para desarrollo con autoreload, descomenta:
      # - .:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: fono-suite-db
    environment:
      POSTGRES_USER: fono
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fonoapp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fono -d fonoapp"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: fono-suite-web
    ports:
      - "8081:80"
    depends_on:
      - api
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: fono-suite-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: dbanetworktest@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5051:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  pgdata:
  storage:
